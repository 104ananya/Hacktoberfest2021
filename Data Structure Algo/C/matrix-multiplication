// MATRIX MULTIPLICATION

#include <stdio.h>
 
int main()
{
  int m, n, p, q, c, d, k,a,i, sum = 0;
  int first[10][10], second[10][10], multiply[10][10];
 
  printf("Enter rows and columns of first matrix\n");
  scanf("%d%d", &m, &n);
  printf("Enter elements of first matrix\n");
 
  for (c = 0; c < m; c++)
    for (d = 0; d < n; d++)
      scanf("%d", &first[c][d]);
 
  printf("Enter rows and columns of second matrix\n");
  scanf("%d%d", &p, &q);
 
  if (n != p)
    printf("The multiplication isn't possible.\n");
  else
  {
    printf("Enter elements of second matrix\n");
 
    for (c = 0; c < p; c++)
      for (d = 0; d < q; d++)
        scanf("%d", &second[c][d]);
 
    for (c = 0; c < m; c++) {
      for (d = 0; d < q; d++) {
        for (k = 0; k < p; k++) {
          sum = sum + first[c][k]*second[k][d];
        }
 
        multiply[c][d] = sum;
        sum = 0;
      }
    }
    i=m/2;
    printf("Product of the matrices:\n");
 
    for (c = 0; c < m; c++)
     {
      for (d = 0; d < n; d++)
      printf("%d\t", first[c][d]);
      if(c==i)
       { printf("\t*\t\t");}
       else
       { printf("\t\t\t");}


      for (a = 0; a < p; a++)
      printf("%d\t", first[c][a]);

      if(c==i)
       { printf("\t=\t\t");}
       else
       { printf("\t\t\t");}

      for (k = 0; k < q; k++)
        printf("%d\t", multiply[c][k]);
 
      printf("\n");
    }
  }
 
  return 0;
}
